@model Vehicle_Showroom_Management_System.Areas.Admin.Data.UserAccount

@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/Index.cshtml";
}
<link href="~/Areas/Admin/Contents/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Areas/Admin/Contents/js/jquery-ui.js"></script>
<div class="container">
    <br />
    <h2 style="text-align: center"><b>Edit User</b></h2>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formEdit" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-6">
                    @Html.HiddenFor(model => model.UserId)

                    <div class="form-group">
                        <b>
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @id = "FullName" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <b>
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @id = "UserName" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <b>
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <b>
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <b>
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @id = "PhoneNumber", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <b>
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", @id = "Birthday", } })
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="margin-left:140px;margin-top: 45px;">
                        <a onclick="clickTest()" class="btn btn-success" style="color: white"><b>Update user</b></a>&nbsp;&nbsp;&nbsp;
                        <a href="/Admin/Profile/@Model.UserId" class="btn btn-primary"><b>Back to Profile</b></a>
                    </div>
                    <button type="submit" id="btnSubmit" disabled hidden class="btn btn-success"></button>
                </div>
            </div>
        </div>
    }

<script>
    var url = window.location.origin + "/Admin/EditCurrentUser/" +@Session["userId"];
    if (window.location.href != url) {
            window.location.href = url;
        }
        $(document).ready(function () {
            $('#Birthday').datepicker({
                dateFormat: 'mm/dd/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '1920:2020',
            });
            $('#Birthday').attr('readonly', 'readonly');
            $("#formEdit").keydown(function (e) {
                if (e.which == 13) {
                    clickTest();
                }
            })
        });
        function clickTest() {
            var i = 0;
            if (i == 0 && $("#FullName").val() == "") {
                swal("There was a problem !!!", "Please enter Fullname", "error").then(() => { $("#FullName").focus(); });

            } else {
                if (i == 0 && $("#FullName").val().length > 256) {
                    swal("There was a problem !!!", "Fullname Maximum is 256 characters", "error").then(() => { $("#FullName").focus(); });
                } else {
                    i++;
                }
            }
            if (i == 1 && $("#UserName").val() == "") {
                swal("There was a problem !!!", "Please enter UserName", "error").then(() => { $("#UserName").focus(); });
            } else {
                if (i == 1) {
                    var regex = /^[a-zA-Z0-9]{1,1000}$/;
                    if (i == 1 && !regex.test($("#UserName").val())) {
                        swal("There was a problem !!!", "Please enter UserName without special characters, ", "error").then(() => { $("#UserName").focus(); });
                    } else {
                    if (i == 1 && $("#UserName").val().length > 40) {
                        swal("There was a problem !!!", "Maximum length of Username is 40", "error").then(() => { $("#UserName").focus(); });
                    } else {
                        var oldUserName = @Html.Raw(Json.Encode(Model.UserName));
                        var newUserName = $("#UserName").val();
                    $.ajax({
                        type: "POST",
                        url: "/Admin/UserAccount/CheckUserEdit",
                        data: '{oldUserName: "' + oldUserName + '" , newUserName: "' + newUserName + '" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response) {
                                swal("There was a problem !!!", "UserName already existed", "error").then(() => { $("#UserName").focus(); });
                            }
                            else {
                                i++;
                            }
                            if (i == 2 && $("#Address").val() == "") {
                                swal("There was a problem !!!", "Please enter Address", "error").then(() => { $("#Address").focus(); });
                            } else {
                                i++;
                            }

                            if (i == 3 && $("#Email").val() == "") {
                                swal("There was a problem !!!", "Please enter Email", "error").then(() => { $("#Email").focus(); });
                            } else {
                                if (i == 3) {
                                    if (i == 3 && $("#Email").val().length > 100) {
                                        swal("There was a problem !!!", "Maximum length of Email is 100 characters", "error").then(() => { $("#Email").focus(); });
                                    } else {
                                    var regex = /^([\w-\.]+\u0040([\w-]+\.)+[\w-]{2,4})?$/;
                                    var oldEmail = @Html.Raw(Json.Encode(Model.Email));
                                    var newEmail = $("#Email").val();
                                    if (regex.test(newEmail)) {
                                        $.ajax({
                                            type: "POST",
                                            url: "/Admin/UserAccount/CheckEmailEdit",
                                            data: '{oldEmail: "' + oldEmail + '",newEmail: "' + newEmail + '"  }',
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (response) {
                                                if (response) {
                                                    swal("There was a problem !!!", "Email already existed", "error").then(() => { $("#Email").focus(); });
                                                } else {
                                                    i++;
                                                }
                                                if (i == 4 && $("#PhoneNumber").val() == "") {
                                                    swal("There was a problem !!!", "Please enter PhoneNumber", "error").then(() => { $("#PhoneNumber").focus(); });
                                                } else {
                                                    if (i == 4 && $("#PhoneNumber").val().length > 20) {
                                                        swal("There was a problem !!!", "Maximum length of Phone Number is 20 numbers", "error").then(() => { $("#PhoneNumber").focus(); });
                                                    } else {
                                                    if (i == 4 && $("#PhoneNumber").val().length < 10) {
                                                        swal("There was a problem !!!", "PhoneNumber contains at least 10 numbers", "error").then(() => { $("#PhoneNumber").focus(); });
                                                    } else {
                                                        if (i == 4) {
                                                        var oldPhoneNumber = @Html.Raw(Json.Encode(Model.PhoneNumber));
                                                        var newPhoneNumber = $("#PhoneNumber").val();
                                                        $.ajax({
                                                            type: "POST",
                                                            url: "/Admin/UserAccount/CheckPhoneNumberEdit",
                                                            data: '{newPhoneNumber: "' + newPhoneNumber + '",oldPhoneNumber: "' + oldPhoneNumber + '" }',
                                                            contentType: "application/json; charset=utf-8",
                                                            dataType: "json",
                                                            success: function (response) {
                                                                if (response) {
                                                                    swal("There was a problem !!!", "PhoneNumber already existed", "error").then(() => { $("#PhoneNumber").focus(); });
                                                                } else {
                                                                    i++;
                                                                }
                                                                if (i == 5) {
                                                                    setTimeout(function () {
                                                                        swal({
                                                                            title: "Update user success!",
                                                                            icon: "success",
                                                                            buttons: false,
                                                                            dangerMode: false,
                                                                        })
                                                                        setTimeout(function () {
                                                                            $("#btnSubmit").removeAttr('disabled');
                                                                            $("#btnSubmit").click();
                                                                        }, 800);
                                                                    }, 100);
                                                                }
                                                            }
                                                        })
                                                    }
                                                    }
                                                    }
                                                }
                                            }
                                        });
                                    } else {
                                        swal("There was a problem !!!", "Please enter a valid email address", "error").then(() => { $("#Email").focus(); });
                                    }
                                    }
                                }
                            }
                        }
                    });
                    }
                    }
                }
            }
        }
</script>
</div>
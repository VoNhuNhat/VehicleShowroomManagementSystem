@model Vehicle_Showroom_Management_System.Areas.Admin.Data.Car
@using Vehicle_Showroom_Management_System.Areas.Admin.Data
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/Index.cshtml";
}

<link href="~/Areas/Admin/Contents/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Areas/Admin/Contents/js/jquery-ui.js"></script>

<br />
<div class="container">
    <h2 style="text-align: center"><b>Create Car</b></h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCreate" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ModelNumberCar, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ModelNumberCar, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4" style="font-weight: bold">Purchase Order</label>
                        <div class="col-md-10">
                            @Html.DropDownList("PurchaseOrderId", (IEnumerable<SelectListItem>)ViewBag.PurchaseOrderList, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CarName, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CarName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PriceInput, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PriceInput, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PriceOutput, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PriceOutput, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SeatQuantity, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SeatQuantity, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gearbox, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Gearbox, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Engine, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Engine, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FuelConsumption, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FuelConsumption, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.KilometerGone, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.KilometerGone, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            <select name="Status" class="form-control" id="Status">
                                <option value="0">New</option>
                                <option value="1">Used</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Checking, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            <select name="Checking" class="form-control" id="Checking">
                                <option value="0">Available</option>
                                <option value="1">Unavailable</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PurchaseOrderDate, htmlAttributes: new { @class = "control-label col-md-4", @style = "font-weight: bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PurchaseOrderDate, new { htmlAttributes = new { @class = "form-control" } })
                            <div class="form-group" style="margin-top: 30px">
                                <a onclick="clickCreate()" class="btn btn-success" style="color: white"><b>Add new Car</b></a>&nbsp;&nbsp;
                                <a href="/Admin/Car" class="btn btn-primary"><b>Back to List</b></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="btnSubmit" hidden disabled />
                </div>
            </div>
        </div>
    }
</div>

<script>
    $(document).ready(function () {
        $('#PurchaseOrderDate').datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '1920:2020',
        });
        $('#PurchaseOrderDate').attr('readonly', 'readonly');
        $("#formCreate").keydown(function (e) {
            if (e.which == 13) {
                clickCreate();
            }
        });

        if ($("#PurchaseOrderId").val() == null) {
            swal("There was a problem !!!", "Please add new Purchase Order before add Car", "error").then((res) => {
                if (res) {
                    window.location.replace("/Admin/PurchaseOrder/Create");
                } else {
                    window.location.replace("/Admin/PurchaseOrder/Create");
                }
            });
        }
    });

    $("#formCreate").keydown(function (e) {
        if (e.which == 13) {
            clickCreate();
        }
    });

    function clickCreate() {
        var i = 0;
        var modelNumberCar = $("#ModelNumberCar").val();
        if (i == 0 && modelNumberCar.length == 0) {
            swal("There was a problem !!!", "Please enter ModelNumberCar", "error").then(() => { $("#ModelNumberCar").focus(); });
        } else {
            if (i == 0 && modelNumberCar.length > 100) {
                swal("There was a problem !!!", "Maximum length of ModelNumberCar is 100 characters", "error").then(() => { $("#ModelNumberCar").focus(); });
            } else {
                $.ajax({
                    type: "POST",
                    url: "/Admin/Car/CheckModelNumberCar",
                    data: '{modelNumberCar: "' + modelNumberCar + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response) {
                            swal("There was a problem !!!", "ModelNumberCar already existed", "error").then(() => { $("#ModelNumberCar").focus(); });
                        } else {
                            i++;
                        }

                        if (i == 1 && $("#CarName").val() == "") {
                            swal("There was a problem !!!", "Please enter CarName", "error").then(() => { $("#CarName").focus(); });
                        } else {
                            if (i == 1 && $("#CarName").val().length > 256) {
                                swal("There was a problem !!!", "Maximum length of CarName is 256 characters", "error").then(() => { $("#CarName").focus(); });
                            } else {
                                i++;
                            }

                            if (i == 2 && $("#PriceInput").val() == "") {
                                swal("There was a problem !!!", "Please enter PriceInput", "error").then(() => { $("#PriceInput").focus(); });
                            } else {
                                if (i == 2 && $("#PriceInput").val() < 1) {
                                    swal("There was a problem !!!", "Minimum of PriceInput is 1", "error").then(() => { $("#PriceInput").focus(); });
                                } else {
                                    i++;
                                }

                                if (i == 3 && $("#PriceOutput").val() == "") {
                                    swal("There was a problem !!!", "Please enter PriceOutput", "error").then(() => { $("#PriceOutput").focus(); });
                                } else {
                                    if (i == 3 && $("#PriceOutput").val() < 1) {
                                        swal("There was a problem !!!", "Minimum of PriceOutput is 1", "error").then(() => { $("#PriceOutput").focus(); });
                                    } else {
                                        i++;
                                    }

                                    if (i == 4 && $("#SeatQuantity").val() == "") {
                                        swal("There was a problem !!!", "Please enter SeatQuantity", "error").then(() => { $("#SeatQuantity").focus(); });
                                    } else {
                                        if (i == 4 && $("#SeatQuantity").val() < 1) {
                                            swal("There was a problem !!!", "Minimum of SeatQuantity is 1", "error").then(() => { $("#SeatQuantity").focus(); });
                                        } else {
                                            i++;
                                        }

                                        if (i == 5 && $("#Color").val() == "") {
                                            swal("There was a problem !!!", "Please enter Color", "error").then(() => { $("#Color").focus(); });
                                        } else {
                                            if (i == 5 && $("#Color").val() > 50) {
                                                swal("There was a problem !!!", "Maximum length of Color is 50 characters", "error").then(() => { $("#Color").focus(); });
                                            } else {
                                                i++;
                                            }

                                            if (i == 6 && $("#Gearbox").val() == "") {
                                                swal("There was a problem !!!", "Please enter Gearbox", "error").then(() => { $("#Gearbox").focus(); });
                                            } else {
                                                if (i == 6 && $("#Gearbox").val() > 256) {
                                                    swal("There was a problem !!!", "Maximum length of Gearbox is 256 characters", "error").then(() => { $("#Gearbox").focus(); });
                                                } else {
                                                    i++;
                                                }

                                                if (i == 7 && $("#Engine").val() == "") {
                                                    swal("There was a problem !!!", "Please enter Engine", "error").then(() => { $("#Engine").focus(); });
                                                } else {
                                                    if (i == 7 && $("#Engine").val() > 256) {
                                                        swal("There was a problem !!!", "Maximum length of Engine is 256 characters", "error").then(() => { $("#Engine").focus(); });
                                                    } else {
                                                        i++;
                                                    }

                                                    if (i == 8 && $("#FuelConsumption").val() == "") {
                                                        swal("There was a problem !!!", "Please enter FuelConsumption", "error").then(() => { $("#FuelConsumption").focus(); });
                                                    } else {
                                                        if (i == 8 && $("#FuelConsumption").val() < 1) {
                                                            swal("There was a problem !!!", "Minimum of FuelConsumption is 1", "error").then(() => { $("#FuelConsumption").focus(); });
                                                        } else {
                                                            i++;
                                                        }

                                                        if (i == 9 && $("#KilometerGone").val() == "") {
                                                            swal("There was a problem !!!", "Please enter KilometerGone", "error").then(() => { $("#KilometerGone").focus(); });
                                                        } else {
                                                            if (i == 9 && $("#KilometerGone").val() < 0) {
                                                                swal("There was a problem !!!", "Minimum of KilometerGone is 0", "error").then(() => { $("#KilometerGone").focus(); });
                                                            } else {
                                                                i++;
                                                            }

                                                            if (i == 10 && $("#PurchaseOrderDate").val() == "") {
                                                                swal("There was a problem !!!", "Please choose PurchaseOrderDate", "error").then(() => { $("#PurchaseOrderDate").focus(); });
                                                            } else {
                                                                setTimeout(function () {
                                                                    swal({
                                                                        title: "Add new car success!",
                                                                        icon: "success",
                                                                        buttons: false,
                                                                        dangerMode: false,
                                                                    })
                                                                    setTimeout(function () {
                                                                        $("#btnSubmit").prop("disabled", false);
                                                                        $("#btnSubmit").click();
                                                                    }, 800);
                                                                }, 100);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                });
            }
        }
    }    
</script>